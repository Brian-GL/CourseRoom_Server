-- MySQL Script generated by MySQL Workbench
-- Fri Mar 11 21:09:52 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema courseroom_server
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `courseroom_server` ;

-- -----------------------------------------------------
-- Schema courseroom_server
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `courseroom_server` DEFAULT CHARACTER SET utf8 ;
USE `courseroom_server` ;

-- -----------------------------------------------------
-- Table `courseroom_server`.`tb_respuestas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `courseroom_server`.`tb_respuestas` ;

CREATE TABLE IF NOT EXISTS `courseroom_server`.`tb_respuestas` (
  `IdRespuesta` INT NOT NULL AUTO_INCREMENT,
  `Respuesta` VARCHAR(256) NOT NULL,
  `Cliente` VARCHAR(80) NOT NULL,
  `FechaRespuesta` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`IdRespuesta`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `courseroom_server`.`tb_solicitudes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `courseroom_server`.`tb_solicitudes` ;

CREATE TABLE IF NOT EXISTS `courseroom_server`.`tb_solicitudes` (
  `IdSolicitud` INT NOT NULL AUTO_INCREMENT,
  `Solicitud` VARCHAR(200) NOT NULL,
  `Cliente` VARCHAR(80) NOT NULL,
  `FechaSolicitud` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`IdSolicitud`))
ENGINE = InnoDB;

USE `courseroom_server` ;

-- -----------------------------------------------------
-- procedure sp_crs_AgregarRespuesta
-- -----------------------------------------------------

USE `courseroom_server`;
DROP procedure IF EXISTS `courseroom_server`.`sp_crs_AgregarRespuesta`;

DELIMITER $$
USE `courseroom_server`$$
CREATE PROCEDURE `sp_crs_AgregarRespuesta` (
	IN _Respuesta VARCHAR(100),
    IN _Cliente VARCHAR(45),
    IN _FechaRespuesta VARCHAR(75)
)
BEGIN

	IF _Respuesta IS NULL OR LENGTH(_Respuesta) = 0 
		OR  _Cliente IS NULL OR LENGTH(_Cliente) = 0  THEN
        SELECT 0 AS "Codigo", 'La Respuesta O El Cliente Tienen Valores Nulos' AS "Mensaje";
	ELSE 
		
        INSERT INTO tb_respuestas(Respuesta, Cliente, FechaRespuesta)
		VALUES (_Respuesta, _Cliente, 
        IF(_FechaRespuesta IS NULL OR 
        LENGTH(_FechaRespuesta) = 0, DATE_FORMAT(NOW(), '%d/%m/%y %T'), _FechaRespuesta));
        SELECT 1 AS "Codigo", 'OK' AS "Mensaje";
       
	END IF;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_crs_AgregarSolicitud
-- -----------------------------------------------------

USE `courseroom_server`;
DROP procedure IF EXISTS `courseroom_server`.`sp_crs_AgregarSolicitud`;

DELIMITER $$
USE `courseroom_server`$$
CREATE PROCEDURE `sp_crs_AgregarSolicitud`(
	IN _Solicitud VARCHAR(100),
	IN _Cliente VARCHAR(45),
	IN _FechaSolicitud VARCHAR(75)
)
BEGIN

	IF _Solicitud IS NULL OR LENGTH(_Solicitud) = 0 
		OR  _Cliente IS NULL OR LENGTH(_Cliente) = 0  THEN
        SELECT 0 AS "Codigo", 'La Solicitud O El Cliente Tienen Valores Nulos' AS "Mensaje";
	ELSE
    
		INSERT INTO tb_solicitudes(Solicitud, Cliente, FechaSolicitud)
		VALUES (_Solicitud, _Cliente, 
        IF(_FechaSolicitud IS NULL OR 
        LENGTH(_FechaSolicitud) = 0, DATE_FORMAT(NOW(), '%d/%m/%y %T'), _FechaSolicitud));
        
		SELECT 1 AS "Codigo", 'OK' AS "Mensaje";
        
	END IF;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_crs_ObtenerRespuestas
-- -----------------------------------------------------

USE `courseroom_server`;
DROP procedure IF EXISTS `courseroom_server`.`sp_crs_ObtenerRespuestas`;

DELIMITER $$
USE `courseroom_server`$$
CREATE PROCEDURE `sp_crs_ObtenerRespuestas`()
BEGIN
	SELECT IdRespuesta, Respuesta, Cliente, FechaRespuesta FROM tb_respuestas 
    ORDER BY FechaRespuesta DESC LIMIT 50;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure sp_crs_ObtenerSolicitudes
-- -----------------------------------------------------

USE `courseroom_server`;
DROP procedure IF EXISTS `courseroom_server`.`sp_crs_ObtenerSolicitudes`;

DELIMITER $$
USE `courseroom_server`$$
CREATE PROCEDURE `sp_crs_ObtenerSolicitudes`()
BEGIN
	SELECT IdSolicitud, Solicitud, Cliente, FechaSolicitud FROM tb_solicitudes 
    ORDER BY FechaSolicitud DESC LIMIT 50;
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
